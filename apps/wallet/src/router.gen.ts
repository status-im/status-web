/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OnboardingLayoutImport } from './routes/onboarding/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as OnboardingIndexImport } from './routes/onboarding/index'
import { Route as OnboardingNewImport } from './routes/onboarding/new'
import { Route as OnboardingImportImport } from './routes/onboarding/import'
import { Route as PortfolioCollectiblesIndexImport } from './routes/portfolio/collectibles/index'
import { Route as PortfolioAssetsIndexImport } from './routes/portfolio/assets/index'
import { Route as PortfolioAssetsTickerImport } from './routes/portfolio/assets/$ticker'
import { Route as PortfolioCollectiblesNetworkContractIdImport } from './routes/portfolio/collectibles/$network/$contract/$id'

// Create/Update Routes

const OnboardingLayoutRoute = OnboardingLayoutImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingIndexRoute = OnboardingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => OnboardingLayoutRoute,
} as any)

const OnboardingNewRoute = OnboardingNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => OnboardingLayoutRoute,
} as any)

const OnboardingImportRoute = OnboardingImportImport.update({
  id: '/import',
  path: '/import',
  getParentRoute: () => OnboardingLayoutRoute,
} as any)

const PortfolioCollectiblesIndexRoute = PortfolioCollectiblesIndexImport.update(
  {
    id: '/portfolio/collectibles/',
    path: '/portfolio/collectibles/',
    getParentRoute: () => rootRoute,
  } as any,
)

const PortfolioAssetsIndexRoute = PortfolioAssetsIndexImport.update({
  id: '/portfolio/assets/',
  path: '/portfolio/assets/',
  getParentRoute: () => rootRoute,
} as any)

const PortfolioAssetsTickerRoute = PortfolioAssetsTickerImport.update({
  id: '/portfolio/assets/$ticker',
  path: '/portfolio/assets/$ticker',
  getParentRoute: () => rootRoute,
} as any)

const PortfolioCollectiblesNetworkContractIdRoute =
  PortfolioCollectiblesNetworkContractIdImport.update({
    id: '/portfolio/collectibles/$network/$contract/$id',
    path: '/portfolio/collectibles/$network/$contract/$id',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingLayoutImport
      parentRoute: typeof rootRoute
    }
    '/onboarding/import': {
      id: '/onboarding/import'
      path: '/import'
      fullPath: '/onboarding/import'
      preLoaderRoute: typeof OnboardingImportImport
      parentRoute: typeof OnboardingLayoutImport
    }
    '/onboarding/new': {
      id: '/onboarding/new'
      path: '/new'
      fullPath: '/onboarding/new'
      preLoaderRoute: typeof OnboardingNewImport
      parentRoute: typeof OnboardingLayoutImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/'
      fullPath: '/onboarding/'
      preLoaderRoute: typeof OnboardingIndexImport
      parentRoute: typeof OnboardingLayoutImport
    }
    '/portfolio/assets/$ticker': {
      id: '/portfolio/assets/$ticker'
      path: '/portfolio/assets/$ticker'
      fullPath: '/portfolio/assets/$ticker'
      preLoaderRoute: typeof PortfolioAssetsTickerImport
      parentRoute: typeof rootRoute
    }
    '/portfolio/assets/': {
      id: '/portfolio/assets/'
      path: '/portfolio/assets'
      fullPath: '/portfolio/assets'
      preLoaderRoute: typeof PortfolioAssetsIndexImport
      parentRoute: typeof rootRoute
    }
    '/portfolio/collectibles/': {
      id: '/portfolio/collectibles/'
      path: '/portfolio/collectibles'
      fullPath: '/portfolio/collectibles'
      preLoaderRoute: typeof PortfolioCollectiblesIndexImport
      parentRoute: typeof rootRoute
    }
    '/portfolio/collectibles/$network/$contract/$id': {
      id: '/portfolio/collectibles/$network/$contract/$id'
      path: '/portfolio/collectibles/$network/$contract/$id'
      fullPath: '/portfolio/collectibles/$network/$contract/$id'
      preLoaderRoute: typeof PortfolioCollectiblesNetworkContractIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface OnboardingLayoutRouteChildren {
  OnboardingImportRoute: typeof OnboardingImportRoute
  OnboardingNewRoute: typeof OnboardingNewRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
}

const OnboardingLayoutRouteChildren: OnboardingLayoutRouteChildren = {
  OnboardingImportRoute: OnboardingImportRoute,
  OnboardingNewRoute: OnboardingNewRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
}

const OnboardingLayoutRouteWithChildren =
  OnboardingLayoutRoute._addFileChildren(OnboardingLayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingLayoutRouteWithChildren
  '/onboarding/import': typeof OnboardingImportRoute
  '/onboarding/new': typeof OnboardingNewRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/portfolio/assets/$ticker': typeof PortfolioAssetsTickerRoute
  '/portfolio/assets': typeof PortfolioAssetsIndexRoute
  '/portfolio/collectibles': typeof PortfolioCollectiblesIndexRoute
  '/portfolio/collectibles/$network/$contract/$id': typeof PortfolioCollectiblesNetworkContractIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/onboarding/import': typeof OnboardingImportRoute
  '/onboarding/new': typeof OnboardingNewRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/portfolio/assets/$ticker': typeof PortfolioAssetsTickerRoute
  '/portfolio/assets': typeof PortfolioAssetsIndexRoute
  '/portfolio/collectibles': typeof PortfolioCollectiblesIndexRoute
  '/portfolio/collectibles/$network/$contract/$id': typeof PortfolioCollectiblesNetworkContractIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingLayoutRouteWithChildren
  '/onboarding/import': typeof OnboardingImportRoute
  '/onboarding/new': typeof OnboardingNewRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/portfolio/assets/$ticker': typeof PortfolioAssetsTickerRoute
  '/portfolio/assets/': typeof PortfolioAssetsIndexRoute
  '/portfolio/collectibles/': typeof PortfolioCollectiblesIndexRoute
  '/portfolio/collectibles/$network/$contract/$id': typeof PortfolioCollectiblesNetworkContractIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/onboarding'
    | '/onboarding/import'
    | '/onboarding/new'
    | '/onboarding/'
    | '/portfolio/assets/$ticker'
    | '/portfolio/assets'
    | '/portfolio/collectibles'
    | '/portfolio/collectibles/$network/$contract/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/onboarding/import'
    | '/onboarding/new'
    | '/onboarding'
    | '/portfolio/assets/$ticker'
    | '/portfolio/assets'
    | '/portfolio/collectibles'
    | '/portfolio/collectibles/$network/$contract/$id'
  id:
    | '__root__'
    | '/'
    | '/onboarding'
    | '/onboarding/import'
    | '/onboarding/new'
    | '/onboarding/'
    | '/portfolio/assets/$ticker'
    | '/portfolio/assets/'
    | '/portfolio/collectibles/'
    | '/portfolio/collectibles/$network/$contract/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OnboardingLayoutRoute: typeof OnboardingLayoutRouteWithChildren
  PortfolioAssetsTickerRoute: typeof PortfolioAssetsTickerRoute
  PortfolioAssetsIndexRoute: typeof PortfolioAssetsIndexRoute
  PortfolioCollectiblesIndexRoute: typeof PortfolioCollectiblesIndexRoute
  PortfolioCollectiblesNetworkContractIdRoute: typeof PortfolioCollectiblesNetworkContractIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OnboardingLayoutRoute: OnboardingLayoutRouteWithChildren,
  PortfolioAssetsTickerRoute: PortfolioAssetsTickerRoute,
  PortfolioAssetsIndexRoute: PortfolioAssetsIndexRoute,
  PortfolioCollectiblesIndexRoute: PortfolioCollectiblesIndexRoute,
  PortfolioCollectiblesNetworkContractIdRoute:
    PortfolioCollectiblesNetworkContractIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/onboarding",
        "/portfolio/assets/$ticker",
        "/portfolio/assets/",
        "/portfolio/collectibles/",
        "/portfolio/collectibles/$network/$contract/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/onboarding": {
      "filePath": "onboarding/_layout.tsx",
      "children": [
        "/onboarding/import",
        "/onboarding/new",
        "/onboarding/"
      ]
    },
    "/onboarding/import": {
      "filePath": "onboarding/import.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/new": {
      "filePath": "onboarding/new.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/": {
      "filePath": "onboarding/index.tsx",
      "parent": "/onboarding"
    },
    "/portfolio/assets/$ticker": {
      "filePath": "portfolio/assets/$ticker.tsx"
    },
    "/portfolio/assets/": {
      "filePath": "portfolio/assets/index.tsx"
    },
    "/portfolio/collectibles/": {
      "filePath": "portfolio/collectibles/index.tsx"
    },
    "/portfolio/collectibles/$network/$contract/$id": {
      "filePath": "portfolio/collectibles/$network/$contract/$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
